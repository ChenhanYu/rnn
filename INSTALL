
GSKNN (General Stride K-Nearest Neighbor)
INSTALL
---



GSKNN is tested on LINUX and OSX
REQUIRES Intel or GNU compilers. 

LINUX and OSX:
edit set_env.sh and make.inc to set the paths to the libraries. 
Set GSKNN_USE_INTEL=false to use GNU compilers.
Set GSKNN_USE_BLAS=false if you don't have a BLAS library.
The default BLAS library for Intel compiler is MKL, and the 
default for GNU is Netlib (-lblas). If you want to use other 
implementations, change set_env.sh, makefile, make.inc accordingly.

For LINUX (and similarly for OSX), to use the standard makefile:
>source set_env.sh
>make

For LINUX (and similarly for OSX), to use cmake:
>source set_env.sh
>mkdir build
>cd build
>cmake ..
>make
>make install

GSKNN requires C and C++ compilers that support OpenMP, and the
default micro-kernel (uses AVX) requires the a Sandy-Bridge
processor or any successor. 

The default compilation will also compile all the test drivers. To run
some basic example from the testing drivers:

>cd test
>./run_dgsknn.sh

To embed GSKNN in a specific application, you need to include the
header files <gsknn.h> and make the right function calls. 
GSKNN can be linked statically with lib/libgsknn.a or dynamically
using -lgsknn.

C/C++ example:
...
#include <gsknn.h>
...

Compilation example:
>icc ... -I$(GSKNN_DIR)/include $(GSKNN_DIR)/lib/libgsknn.a
